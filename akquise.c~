/*
  simple sample for malloc and pointers pointing to
  structures with pointers pointing to itself, somehow

  From simple to complex but easyier
  - analyse structure of program
  - draw memory diagram
*/

#include <stdio.h>
#include <stdlib.h>

#include <string.h>


#define MAX_PERSON 3

int main(){

  /*
	prologue
  */
  
  char namebuffer[10];
  int len;
  int i;


  /*
	first approach
  */
  struct person1 {
	char name[10];
	int age;
  };

  char *cp;
  char *cpbuffer;
  struct person1 hans;
  

  printf("Enter Name: ");
  scanf("%s", namebuffer);
  
  printf("name is %s with length %i\n", namebuffer, strlen(namebuffer));
  
  len = strlen(namebuffer);
  cp=namebuffer;
  for(i=0;i<len;i++){
	hans.name[i] = namebuffer[i];
  }
  hans.name[i]='\0';
  
  
  /*
	second approach
  */
  struct person2 {
	char *name;
	int age;
  };

  struct person2 peter;
  
  scanf("%s", namebuffer);
  printf("name is %s with length %i\n", namebuffer, strlen(namebuffer));
  
  len=0;
  while(namebuffer[len++]);
  peter.name = (char *) malloc(len);

  cpbuffer = namebuffer;
  cp=peter.name;
  while(*cpbuffer){
	*(cp++) = *(cpbuffer++);
  }

  
  /*
	third approach
  */
  
  
  struct person2 *hotel[MAX_PERSON];
  
  int agebuffer;
  
  for(i=0 ; i<MAX_PERSON; i++){
	printf("Enter Name: ");
	scanf("%s", namebuffer);

	printf("Enter age: ");
	scanf("%i", &agebuffer);
	
	hotel[i] = malloc(sizeof(struct person2));
	
	len=0;
	while(namebuffer[len++]);
	
	(*hotel[i]).name = (char *) malloc(len);
	cp=(*hotel[i]).name;
	cpbuffer = namebuffer;
	while(*(cp++) = *(cpbuffer++));

	(*hotel[i]).age = agebuffer;
  }

  for(i=0; i< MAX_PERSON; i++){
	printf("Name is %s\n age is %d\n\n", (*(hotel[i])).name, (*(hotel[i])).age);
  }
  


  /*
	fourth approach
  */
  

  struct node {
	struct person2 *pp;
	struct node *next;
  };

  struct node *list = NULL;

  struct node *head;
  struct node *middle;
  struct node *last;

  head = malloc(sizeof(struct node));
  middle = malloc(sizeof(struct node));
  last = malloc(sizeof(struct node));

  (*head).pp = &peter;
  (*middle).pp = hotel[0];
  (*last).pp = hotel[1];

  (*head).next = middle;
  (*middle).next = last;
  (*last).next = NULL;
  
  list = head;

  struct node* current;
  for(i=0, current=list; current; current=(*current).next){
	i++;
  }

  printf("We all knew it: length of list is %d\n", i);
  

  
  struct node *newnode;

  newnode = malloc(sizeof(struct node));

  (*newnode).pp = hotel[2];

  (*newnode).next = list;

  list = newnode;
  
  for(i=0, current=list; current; current=(*current).next){
	i++;
  }

  printf("We all knew it: length of list is %d\n", i);

  return 0;
}
